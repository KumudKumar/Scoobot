#include "esp32-camera.h"
#include <WiFi.h>
#include <ESP32Face.h>  // Add a face detection library

const char* ssid = "Your_SSID";
const char* password = "Your_PASSWORD";

WiFiServer server(80);

void setup() {
  Serial.begin(115200);
  connectToWiFi();
  
  camera_config_t config;
  config.ledc_channel = LEDC_CHANNEL;
  config.ledc_timer = LEDC_TIMER;
  config.pin_d0 = 5;
  config.pin_d1 = 16;
  config.pin_d2 = 4;
  config.pin_d3 = 0;
  config.pin_d4 = 2;
  config.pin_d5 = 14;
  config.pin_d6 = 12;
  config.pin_d7 = 13;
  config.pin_xclk = 0;
  config.pin_pclk = 22;
  config.pin_vsync = 25;
  config.pin_href = 23;
  config.pin_sscb_sda = 26;
  config.pin_sscb_scl = 27;
  config.pin_pwdn = 32;
  config.pin_reset = -1;
  config.xclk_freq_hz = 20000000;
  config.pixel_format = PIXFORMAT_JPEG;

  if (esp_camera_init(&config) != ESP_OK) {
    Serial.println("Camera init failed");
    return;
  }

  server.begin();
}

void loop() {
  WiFiClient client = server.available();
  if (client) {
    camera_fb_t *fb = esp_camera_fb_get();
    if (!fb) {
      Serial.println("Camera capture failed");
      return;
    }
    
    // Perform face detection (use ESP32Face or OpenCV)
    if (detectFace(fb)) {
      String imageURL = uploadImageToCloud(fb);
      sendAlert(imageURL); // Send alert to phone/social media
    }
    
    esp_camera_fb_return(fb);
    client.stop();
  }
}

void connectToWiFi() {
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("WiFi connected");
}

bool detectFace(camera_fb_t* fb) {
  // This is a placeholder for face detection using OpenCV or a library for ESP32.
  // Detect and return true if a face is detected.
  return true;  // This would be replaced with actual face detection logic.
}

String uploadImageToCloud(camera_fb_t* fb) {
  // Placeholder code: Upload the captured face to the cloud (e.g., Firebase or server).
  return "https://cloudimage.com/face123.jpg";
}

void sendAlert(String imageURL) {
  // Send alert with the image URL to social media APIs
  Serial.println("Alert sent: " + imageURL);
  // Send the image to social media platforms (this requires API integration)
}
